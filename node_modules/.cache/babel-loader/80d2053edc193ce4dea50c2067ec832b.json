{"ast":null,"code":"var _jsxFileName = \"/home/impressico/react_hooks/src/components/DataFetchingTwo.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst initialState = {\n  loading: true,\n  post: {},\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return {\n        loading: false,\n        post: action.payload,\n        error: ''\n      };\n\n    case 'FETCH_ERROR':\n      return {\n        loading: false,\n        post: {},\n        error: 'Something went wrong'\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction DataFetchingTwo() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts/1').then(responce => {\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: responce.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'FETCH_ERROR'\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, state.loading ? 'Loading...' : state.post.title, state.error ? state.error : null);\n}\n\nexport default DataFetchingTwo;","map":{"version":3,"sources":["/home/impressico/react_hooks/src/components/DataFetchingTwo.js"],"names":["React","useReducer","useEffect","axios","initialState","loading","post","error","reducer","state","action","type","payload","DataFetchingTwo","dispatch","get","then","responce","data","catch","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO;AACHN,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFV;AAGHL,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAMJ,SAAK,aAAL;AACI,aAAO;AACHF,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,SAASI,eAAT,GAA2B;AACvB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBb,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACY,GAAN,CAAU,8CAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,OAAO,EAAEK,QAAQ,CAACC;AAA3C,OAAD,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWZ,KAAK,IAAI;AACZO,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACJ,OAAN,GAAgB,YAAhB,GAA+BI,KAAK,CAACH,IAAN,CAAWc,KAD/C,EAEKX,KAAK,CAACF,KAAN,GAAcE,KAAK,CAACF,KAApB,GAA4B,IAFjC,CADJ;AAMH;;AAED,eAAeM,eAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst initialState = {\n    loading: true,\n    post: {},\n    error: ''\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_SUCCESS':\n            return {\n                loading: false,\n                post: action.payload,\n                error: ''\n            }\n            \n        case 'FETCH_ERROR':\n            return {\n                loading: false,\n                post: {},\n                error: 'Something went wrong'\n            }\n        default:\n            return state\n    }\n}\n\nfunction DataFetchingTwo() {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    useEffect(() => {\n        axios.get('https://jsonplaceholder.typicode.com/posts/1')\n            .then(responce => {\n                dispatch({ type: 'FETCH_SUCCESS', payload: responce.data })\n            })\n            .catch(error => {\n                dispatch({ type: 'FETCH_ERROR' })\n            })\n    }, [])\n    return (\n        <div>\n            {state.loading ? 'Loading...' : state.post.title}\n            {state.error ? state.error : null}\n        </div>\n    )\n}\n\nexport default DataFetchingTwo\n"]},"metadata":{},"sourceType":"module"}