{"ast":null,"code":"var _jsxFileName = \"/home/impressico/react_hooks/src/components/CounterTwo.js\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  firstCounter: 0,\n  secondCounter: 10\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state,\n        firstCounter: state.firstCounter + action.value\n      };\n\n    case 'decrement':\n      return { ...state,\n        firstCounter: state.firstCounter - action.value\n      };\n\n    case 'increment2':\n      return { ...state,\n        secondCounter: state.secondCounter + action.value\n      };\n\n    case 'decrement2':\n      return { ...state,\n        secondCounter: state.secondCounter - action.value\n      };\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction CounterTwo() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"first counter - \", count.firstCounter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Second counter - \", count.secondCounter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment',\n      value: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Increment 5\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement',\n      value: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Decrement 5\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'increment2',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Increment counter 2\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'decrement2',\n      value: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Decrement counter 2\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Reset\"));\n}\n\nexport default CounterTwo;","map":{"version":3,"sources":["/home/impressico/react_hooks/src/components/CounterTwo.js"],"names":["React","useReducer","initialState","firstCounter","secondCounter","reducer","state","action","type","value","CounterTwo","count","dispatch"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\n\nconst initialState = {\n    firstCounter: 0,\n    secondCounter: 10\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'increment':\n            return { ...state, firstCounter: state.firstCounter + action.value }\n        case 'decrement':\n            return { ...state, firstCounter: state.firstCounter - action.value }\n        case 'increment2':\n            return { ...state, secondCounter: state.secondCounter + action.value }\n        case 'decrement2':\n            return { ...state, secondCounter: state.secondCounter - action.value }\n        case 'reset':\n            return initialState\n        default:\n            return state\n    }\n}\n\nfunction CounterTwo() {\n    const [count, dispatch] = useReducer(reducer, initialState)\n    return (\n        <div>\n            <div>first counter - {count.firstCounter}</div>\n            <div>Second counter - {count.secondCounter}</div>\n            <button onClick={() => dispatch({ type: 'increment', value: 1 })}>\n                Increment\n            </button>\n            <button onClick={() => dispatch({ type: 'decrement', value: 1 })}>\n                Decrement\n            </button>\n            <button onClick={() => dispatch({ type: 'increment', value: 5 })}>\n                Increment 5\n            </button>\n            <button onClick={() => dispatch({ type: 'decrement', value: 5 })}>\n                Decrement 5\n            </button>\n            <div>\n            <button onClick={() => dispatch({ type: 'increment2', value: 1 })}>\n                Increment counter 2\n            </button>\n            <button onClick={() => dispatch({ type: 'decrement2', value: 1 })}>\n                Decrement counter 2\n            </button>\n            </div>\n            <button onClick={() => dispatch({ type: 'reset' })}>Reset</button>\n        </div>\n    )\n}\n\nexport default CounterTwo\n"]},"metadata":{},"sourceType":"module"}