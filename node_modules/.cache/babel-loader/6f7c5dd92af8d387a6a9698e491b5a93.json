{"ast":null,"code":"var _jsxFileName = \"/home/impressico/react_hooks/src/App.js\";\nimport React, { useReducer } from 'react';\nimport './App.css';\nimport ComponentB from './components/ComponentB';\nimport ComponentA from './components/ComponentA';\nimport ComponentC from './components/ComponentC';\nexport const CountContext = React.createContext();\nconst initialState = 0;\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return state + 1;\n\n    case 'decrement':\n      return state - 1;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Count - \", count), /*#__PURE__*/React.createElement(CountContext.Provider, {\n    value: {\n      countState: count,\n      countDispatch: dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComponentA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComponentB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComponentC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/impressico/react_hooks/src/App.js"],"names":["React","useReducer","ComponentB","ComponentA","ComponentC","CountContext","createContext","initialState","reducer","state","action","App","count","dispatch","countState","countDispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,EAArB;AAEP,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAR;AACE,SAAK,WAAL;AACE,aAAOD,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOF,YAAP;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD,CAXD;;AAaA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACO,OAAD,EAAUD,YAAV,CAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcK,KAAd,CADF,eAEE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAEF,KAAd;AAAqBG,MAAAA,aAAa,EAAEF;AAApC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport './App.css';\nimport ComponentB from './components/ComponentB';\nimport ComponentA from './components/ComponentA';\nimport ComponentC from './components/ComponentC';\n\nexport const CountContext = React.createContext()\n\nconst initialState = 0\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return state + 1\n    case 'decrement':\n      return state - 1\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\nfunction App() {\n  const [count, dispatch] = useReducer(reducer, initialState)\n  return (\n    <div className=\"App\">\n      <div>Count - {count}</div>\n      <CountContext.Provider value={{ countState: count, countDispatch: dispatch }}>\n        <ComponentA />\n        <ComponentB />\n        <ComponentC />\n      </CountContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}