{"ast":null,"code":"var _jsxFileName = \"/home/impressico/react_hooks/src/App.js\";\nimport React, { useReducer } from 'react';\nimport './App.css';\nimport ComponentB from './components/ComponentB';\nimport ComponentA from './components/ComponentA';\nimport ComponentC from './components/ComponentC';\nconst initialState = 0;\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return state + 1;\n\n    case 'decrement':\n      return state - 1;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Count - \", count), /*#__PURE__*/React.createElement(ComponentA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ComponentB, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ComponentC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/impressico/react_hooks/src/App.js"],"names":["React","useReducer","ComponentB","ComponentA","ComponentC","initialState","reducer","state","action","App","count","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAR;AACE,SAAK,WAAL;AACE,aAAOD,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOF,YAAP;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD,CAXD;;AAaA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACK,OAAD,EAAUD,YAAV,CAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcK,KAAd,CADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport './App.css';\nimport ComponentB from './components/ComponentB';\nimport ComponentA from './components/ComponentA';\nimport ComponentC from './components/ComponentC';\n\nconst initialState = 0\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return state + 1\n    case 'decrement':\n      return state - 1\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\nfunction App() {\n  const [count, dispatch] = useReducer(reducer, initialState)\n  return (\n    <div className=\"App\">\n      <div>Count - {count}</div>\n      <ComponentA />\n      <ComponentB />\n      <ComponentC />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}